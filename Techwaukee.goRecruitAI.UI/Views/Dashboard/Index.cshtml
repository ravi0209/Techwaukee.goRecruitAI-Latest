@model IEnumerable<Techwaukee.goRecruitAI.ViewModels.CandidateStatusCount>
@using System.Text.Json;
@using Techwaukee.goRecruitAI.Models;
@using Techwaukee.goRecruitAI.ViewModels;
@using Microsoft.AspNetCore.Session;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "GorecruitAI | Recruiter Dashboard";
    var userDetails = JsonSerializer.Deserialize<UserDetail>(HttpContextAccessor.HttpContext.Session.GetString("UserDetails"));
}

<div class="container-fluid py-3">
    <div class="row" id="reportContent">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-lg-9">
                            <h6 class="mb-1 mt-1">Hello @userDetails.Firstname!</h6>
                            <p class="mt-1">Welcome to the world of endless possibilities, where talent meets opportunity.</p>
                        </div>
                        <div class="col-lg-3" style="text-align: right !important;">
                            <div class="mb-3" id="datetime"><p>10:10 AM EST | 20 Jun 2023</p></div>
                            <ul class="nav nav-pills nav-fill p-1" role="tablist" id="tabPnl">
                                <li class="nav-item">
                                    <a class="nav-link mb-0 px-0 py-1 active" data-bs-toggle="tab" href="#Overview" role="tab" aria-controls="Overview" aria-selected="true">
                                        Overview
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link mb-0 px-0 py-1" data-bs-toggle="tab" href="#Today" role="tab" aria-controls="Today" aria-selected="false">
                                        Today
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div id="001">
                    <div class="px-0 mb-0 mt-2">
                        <div class="row">
                            <div class="col-lg-2 col-6 text-center">
                                <h2 class="text-info text-gradient"><span class="small"></span><span id="statActiveJob">0</span></h2>
                                <p class="mb-0">Active Jobs</p>
                            </div>
                            <div class="col-lg-2 col-6 text-center">
                                <h2 class="text-info text-gradient"><span class="small"></span><span id="statSubmittedToTL">0</span></h2>
                                <p class="mb-0">Submitted to TL</p>
                            </div>
                            <div class="col-lg-2 col-6 text-center">
                                <h2 class="text-info text-gradient"><span class="small"></span><span id="statSubmittedToBP">0</span></h2>
                                <p class="mb-0">Submitted to BP</p>
                            </div>
                            <div class="col-lg-2 col-6 text-center">
                                <h2 class="text-info text-gradient"><span class="small"></span><span id="statSubmittedToEC">0</span></h2>
                                <p class="mb-0">Submitted to EC</p>
                            </div>
                            <div class="col-lg-2 col-6 text-center">
                                <h2 class="text-dark text-gradient"><span class="small"></span><span id="statInterviews">0</span></h2>
                                <p class="mb-0">Interviews</p>
                            </div>
                            <div class="col-lg-2 col-6 text-center">
                                <h2 class="text-success text-gradient"><span class="small"></span><span id="statClosure">0</span></h2>
                                <p class="mb-0">Closure</p>
                            </div>
                        </div>
                    </div>
                    <div class="z-index-2 px-2 mt-4">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-lg-8">
                                    <h6 class="mb-1 mt-1">Performance chart</h6>
                                </div>
                                <div class="col-lg-4" style="text-align: right !important;">
                                    <ul class="nav nav-pills nav-fill p-1" role="tablist">
                                        <li class="nav-item">
                                            <a class="nav-link mb-0 px-0 py-1 active" data-bs-toggle="tab" href="#Year" role="tab" aria-controls="year" aria-selected="true">
                                                Year
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link mb-0 px-0 py-1" data-bs-toggle="tab" href="#Month" role="tab" aria-controls="month" aria-selected="false">
                                                Month
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link mb-0 px-0 py-1" data-bs-toggle="tab" href="#Week" role="tab" aria-controls="week" aria-selected="false">
                                                Week
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <div>
                                <div class="chart" id="chart01">
                                    <canvas id="mixed-chart" class="chart-canvas" height="300"></canvas>
                                </div>
                                <div class="chart" id="chart02" style="height: 300px !important;">
                                    <canvas id="mixed-chart1" class="chart-canvas" height="300"></canvas>
                                </div>
                                <div class="chart" id="chart03" style="height: 300px !important;">
                                    <canvas id="mixed-chart2" class="chart-canvas" height="300"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="002">
                    <div class="z-index-2 px-2">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-lg-5">

                                    <!-- Chart -->
                                    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
                                    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
                                    <div id="chart"></div>
                                    <i class="fas fa-light fa-arrow-up" aria-hidden="true" id="btnExportIcon"></i>&nbsp;&nbsp;
                                    @*<span class="text-gradient text-info mb-2 text-sm" onblur="fnExportPDF()">Export Report</span>*@
                                    <input type="button" id="btnExport" value="Export PDF">
                                </div>
                                <div class="col-lg-7">
                                    <p id="spanDailyTarget">
                                        <span class="align-middle text-center text-sm badge-dot mb-1">
                                            <i class="bg-info"></i>
                                            <span class="text-dark">Note that your daily target remains at <b id="lblDailyTarget"></b> submissions</span>
                                        </span>
                                    </p>
                                    <p id="spanPendingSubmissionYesterday">
                                        <span class="align-middle text-center text-sm badge-dot mb-3">
                                            <i class="bg-info"></i>
                                            <span class="text-dark">Due to the target being missed yesterday, today you are required to complete <b id="lblDailyTargetWithPending">0</b>.</span>
                                        </span>
                                    </p>
                                    <p>
                                        <span class="align-middle text-center text-sm badge-dot mb-3">
                                            <i class="bg-info"></i>
                                            <span class="text-dark">Note that your weekly target remains at <b id="lblWeeklyTarget">0</b> submissions. You have achieved <b id="#lblWeeklySubmitted">0</b> submissions.</span>
                                        </span>
                                    </p>
                                    <p>
                                        <span class="align-middle text-center text-sm badge-dot mb-3">
                                            <i class="bg-info"></i>
                                            <span class="text-dark">Note that your monthly target remains at <b id="lblMonthlyTarget">0</b> submissions. You have achieved <b id="lblMonthlySubmitted">0</b> submissions.</span>
                                        </span>
                                    </p>
                                    <p>
                                        <span class="align-middle text-center text-sm badge-dot mb-3">
                                            <i class="bg-info"></i>
                                            <span class="text-dark">Monthy Closure target remains at <b id="lblMonthlyClosure">0</b>. Totaly You have achived <b id="lblYearlyClosed">0</b> Closure this year</span>
                                        </span>
                                    </p>
                                    <div id="spnOnboardDetails">
                                    </div>
                                    <p>
                                        <span class="align-middle text-center text-sm badge-dot mb-3">
                                            <i class="bg-danger"></i>
                                            <span class="text-dark"><b>This Month TL Rejection</b> - <span id="lblRejectedByTL">0</span> </span>
                                        </span>
                                    </p>
                                    <p>
                                        <span class="align-middle text-center text-sm badge-dot mb-3">
                                            <i class="bg-danger"></i>
                                            <span class="text-dark" id="lblManagerFeedBack"></span>
                                        </span>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*<footer class="footer pt-3">
    <div class="container-fluid">
    <div class="row align-items-center justify-content-lg-between">
    <div class="col-lg-6 mb-lg-0 mb-4">
    <div class="copyright text-center text-sm text-muted text-lg-start">
    © <script>
    document.write(new Date().getFullYear())
    </script>,
    made with <i class="fa fa-heart"></i> by
    <a href="https://www.creative-tim.com" class="font-weight-bold" target="_blank">Creative Tim</a>
    for a better web.
    </div>
    </div>
    <div class="col-lg-6">
    <ul class="nav nav-footer justify-content-center justify-content-lg-end">
    <li class="nav-item">
    <a href="https://www.creative-tim.com" class="nav-link text-muted" target="_blank">Creative Tim</a>
    </li>
    <li class="nav-item">
    <a href="https://www.creative-tim.com/presentation" class="nav-link text-muted" target="_blank">About Us</a>
    </li>
    <li class="nav-item">
    <a href="https://www.creative-tim.com/blog" class="nav-link text-muted" target="_blank">Blog</a>
    </li>
    <li class="nav-item">
    <a href="https://www.creative-tim.com/license" class="nav-link pe-0 text-muted" target="_blank">License</a>
    </li>
    </ul>
    </div>
    </div>
    </div>
    </footer>*@
</div>
<script src="~/js/jquery.multi-select.min.js"></script>
<script src="~/js/jquery.multi-select.js"></script>
<script src="~/js/jquery.js"></script>

@*<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.5/jspdf.min.js"></script>*@
@*<script type="text/javascript" src="https://html2canvas.hertzen.com/dist/html2canvas.js"></script>*@
<script src="~/js/jspdf.min.js"></script>
<script src="~/js/html2canvas.js"></script>

<script>

    var radialChartData = { targetCount: [], achievedCount: [] };
    var targetArr = [];
    var achievedArr = [];
    function fnGetRecruitmentStatusCountByRecruiter() {
        $.ajax({
            type: "GET",
            url: "/dashboard/GetCandidateStatusCountByRecruiter?recruiterId=@userDetails.TweId",
            success: function (response) {

                $('#statSubmittedToTL').text(filterItems(response, "Submitted to TL")[0].totalCount);
                $('#statSubmittedToBP').text(filterItems(response, "Submitted to BP")[0].totalCount);
                $('#statSubmittedToEC').text(filterItems(response, "Submitted to EC")[0].totalCount);
                if (filterItems(response, "BP Interview")[0].totalCount > 0 || filterItems(response, "EC Interview")[0].totalCount > 0) {

                    if (filterItems(response, "BP Interview") != "" && filterItems(response, "EC Interview") != "") {

                        $('#statInterviews').text(filterItems(response, "EC Interview")[0].totalCount + filterItems(response, "BP Interview")[0].totalCount);
                    }
                    else if (filterItems(response, "BP Interview")[0].totalCount != null) {

                        $('#statInterviews').text(filterItems(response, "BP Interview")[0].totalCount);
                    }
                    else if (filterItems(response, "EC Interview")[0].totalCount != null) {

                        $('#statInterviews').text(filterItems(response, "EC Interview")[0].totalCount);
                    }

                }

                $('#statClosure').text(filterItems(response, "Onboarded")[0].totalCount);
            },
            error: function (xhr, status, error) {
                var err = eval("(" + xhr.responseText + ")");
                console.log(err.Message);
            },
            async: false
        });
    }
    function fnGetPerformanceReportDetails() {
        $.ajax({
            type: "GET",
            url: "/dashboard/GetPerformanceReportDetails?userId=@userDetails.TweId&filterBy=test",
            success: function (response) {

                debugger;
                // Sample data for each month
                const months = response.yearly.filter(f=>f.statusName =="SubmittedToBP").map(m=> m.monthName);
                const data1 = response.yearly.filter(f => f.statusName == "SubmittedToBP").map(m => m.recCount);
                const data3 = response.yearly.filter(f=>f.statusName =="SubmittedToEC").map(m=> m.recCount);
                const data2 = response.yearly.filter(f => f.statusName == "Closure").map(m => m.recCount);
                debugger;
                // Get the canvas element
                const ctx = document.getElementById('mixed-chart').getContext('2d');

                // Create the mixed chart
                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: months,
                        datasets: [
                            {
                                type: 'bar',
                                label: 'BP Submission',
                                backgroundColor: 'rgba(54, 162, 235, 0.5)',
                                data: data1
                            },
                            {
                                type: 'bar',
                                label: 'EC Submission',
                                backgroundColor: 'rgba(75, 192, 192, 0.5)',
                                data: data3
                            },
                            {
                                type: 'line',
                                label: 'Closure',
                                borderColor: 'rgba(255, 99, 132, 1)',
                                borderWidth: 1,
                                fill: false,
                                data: data2
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            x: {
                                grid: {
                                    display: false
                                },
                                ticks: {
                                    display: true,
                                    color: '#b2b9bf',
                                    font: {
                                        size: 11,
                                        family: 'Open Sans',
                                        style: 'normal',
                                        lineHeight: 2
                                    }
                                }
                            },
                            y: {
                                grid: {
                                    display: true,
                                    borderDash: [5, 5]
                                },
                                ticks: {
                                    display: true,
                                    padding: 10,
                                    color: '#b2b9bf',
                                    font: {
                                        size: 11,
                                        family: 'Open Sans',
                                        style: 'normal',
                                        lineHeight: 2
                                    }
                                }
                            }
                        }
                    }
                });

                // Sample data for each week
                
                const weeks = response.monthly.weekRange; //['29 - 2 Week', '5 - 9 Week', '12 - 16 Week', '19 - 23 Week', '26 - 30 Week'];
                const data4 = response.monthly.submittedToBP;//[20, 50, 50, 10, 30];
                const data5 = response.monthly.submittedToEC;//[15, 30, 40, 8, 40];
                const data6 = response.monthly.closed;//[0, 0, 0, 0, 25];

                

                // Get the canvas element
                const ctx2 = document.getElementById('mixed-chart1').getContext('2d');

                // Create the mixed chart
                new Chart(ctx2, {
                    type: 'bar',
                    data: {
                        labels: weeks,
                        datasets: [
                            {
                                type: 'bar',
                                label: 'BP Submission',
                                backgroundColor: 'rgba(54, 162, 235, 0.5)',
                                data: data4
                            },
                            {
                                type: 'bar',
                                label: 'EC Submission',
                                backgroundColor: 'rgba(75, 192, 192, 0.5)',
                                data: data5
                            },
                            {
                                type: 'line',
                                label: 'Closure',
                                borderColor: 'rgba(255, 99, 132, 1)',
                                borderWidth: 1,
                                fill: false,
                                data: data6
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            x: {
                                grid: {
                                    display: false
                                },
                                ticks: {
                                    display: true,
                                    color: '#b2b9bf',
                                    font: {
                                        size: 11,
                                        family: 'Open Sans',
                                        style: 'normal',
                                        lineHeight: 2
                                    }
                                }
                            },
                            y: {
                                grid: {
                                    display: true,
                                    borderDash: [5, 5]
                                },
                                ticks: {
                                    display: true,
                                    padding: 10,
                                    color: '#b2b9bf',
                                    font: {
                                        size: 11,
                                        family: 'Open Sans',
                                        style: 'normal',
                                        lineHeight: 2
                                    }
                                }
                            }
                        },
                        //plugins: {
                        //    legend: {
                        //        display: true,
                        //        position: 'top', // Align the legend to the top
                        //        align: 'start', // Align the legend to the left
                        //    }
                        //}
                    }
                });

                // Sample data for each week
                const days = response.weekly.dateMonthName;//['20 Jun', '21 Jun', '22 Jun', '23 Jun', '26 Jun'];
                const data7 = response.weekly.submittedToBP;//[10, 6, 6, 8, 2];
                const data8 = response.weekly.submittedToEC;//[6, 3, 4, 7, 0];
                const data9 = response.weekly.closed;//[0, 0, 05, 0, 0];
                
                // Get the canvas element
                const ctx3 = document.getElementById('mixed-chart2').getContext('2d');

                // Create the mixed chart
                new Chart(ctx3, {
                    type: 'bar',
                    data: {
                        labels: days,
                        datasets: [{
                            type: 'bar',
                            label: 'BP Submission',
                            backgroundColor: 'rgba(54, 162, 235, 0.5)',
                            data: data7
                        },
                        {
                            type: 'bar',
                            label: 'EC Submission',
                            backgroundColor: 'rgba(75, 192, 192, 0.5)',
                            data: data8
                        },
                        {
                            type: 'line',
                            label: 'Closure',
                            borderColor: 'rgba(255, 99, 132, 1)',
                            borderWidth: 1,
                            fill: false,
                            data: data9
                        }
                        ]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            x: {
                                grid: {
                                    display: false
                                },
                                ticks: {
                                    display: true,
                                    color: '#b2b9bf',
                                    font: {
                                        size: 11,
                                        family: 'Open Sans',
                                        style: 'normal',
                                        lineHeight: 2
                                    }
                                }
                            },
                            y: {
                                grid: {
                                    display: true,
                                    borderDash: [5, 5]
                                },
                                ticks: {
                                    display: true,
                                    padding: 10,
                                    color: '#b2b9bf',
                                    font: {
                                        size: 11,
                                        family: 'Open Sans',
                                        style: 'normal',
                                        lineHeight: 2
                                    }
                                }
                            }
                        },
                        //plugins: {
                        //    legend: {
                        //        display: true,
                        //        position: 'top', // Align the legend to the top
                        //        align: 'start', // Align the legend to the left
                        //    }
                        //}
                    }
                });
            },
            error: function (xhr, status, error) {
                var err = eval("(" + xhr.responseText + ")");
                console.log(err.Message);
            },
            async: false
        });
    }
    function fnGetActiveJobsCountByRecruiter() {
        $.ajax({
            type: "GET",
            url: "/dashboard/GetActiveJobsCountByRecruiter?recruiterId=@userDetails.TweId",
            success: function (response) {
                $('#statActiveJob').text(response);
            },
            error: function (xhr, status, error) {
                var err = eval("(" + xhr.responseText + ")");
                console.log(err.Message);
            },
            async: false
        });
    }
    function fnGetOverviewReportofRecruiter() {
        $.ajax({
            type: "GET",
            url: "/dashboard/GetOverviewReportofRecruiter?recruiterId=@userDetails.TweId",
            success: function (data) {

                $('#lblDailyTarget').text(data.targetCount.submissionDaily);

                if (data.achievedCount.pendingSubmissionOfYesterday <= 0) {
                    $("#spanPendingSubmissionYesterday").hide();
                }
                else {
                    $('#lblDailyTargetWithPending').text((data.targetCount.submissionDaily + data.achievedCount.pendingSubmissionOfYesterday).toString());
                }
                radialChartData.targetCount = targetArr;
                radialChartData.achievedCount = achievedArr;

                $('#lblWeeklyTarget').text(data.targetCount.submissionWeekly.toString());
                $('#lblWeeklySubmitted').text(data.achievedCount.achievedWeekly.toString());

                $('#lblMonthlyTarget').text(data.targetCount.submissionMonthly.toString());
                $('#lblMonthlySubmitted').text(data.achievedCount.achievedMonthly.toString());

                $('#lblMonthlyClosure').text(data.targetCount.submissionMonthly.toString());
                $('#lblYearlyClosed').text(data.targetCount.achievedMonthly);// need to add sum of current year's count

                $('#lblRejectedByTL').text(data.tlRejectedCurrentMonth.toString());


                var mgrFeedbackTxt = "NA";
                if (data.managerFeedback != null && data.managerFeedback != undefined) {
                    if (data.managerFeedback != "")
                        mgrFeedbackTxt = data.managerFeedback
                }

                var mgrFeedback = "<span>" + mgrFeedbackTxt + "</span>";

                $('#lblManagerFeedBack').html("<b>Manager Feedback</b> - " + mgrFeedback);

                var template = "<p><span class='align-middle text-center text-sm badge-dot mb-3'><i class='bg-success'> </i><span class='text-dark'> Your Candidate #fullName# onboared on #onboardDate#. You will receive your closure bonus on or after #bonusDate# </span></span></p>";

                if (data.CandidateClosureDetails != null && data.CandidateClosureDetails.length > 0) {
                    data.CandidateClosureDetails.forEach(function (data) {

                        $('#spnOnboardDetails').append(template.replace("#fullName#", data.FullName).replace("#onboardDate#", data.OnBoardDate).replace("#bonusDate# ", data.BonusDate));
                    });

                    achievedArr.push(data.CandidateClosureDetails.length);
                }
                else {
                    achievedArr.push(0);
                }

                if (data.targetCount.submissionMonthly > 0)
                    targetArr.push(data.targetCount.submissionMonthly * 12);
                else
                    targetArr.push(data.targetCount.submissionMonthly);

                targetArr.push(data.targetCount.submissionMonthly);
                targetArr.push(data.targetCount.submissionWeekly);
                targetArr.push(data.targetCount.submissionDaily);

                achievedArr.push(data.achievedCount.achievedMonthly);
                achievedArr.push(data.achievedCount.achievedWeekly);
                achievedArr.push(data.achievedCount.achievedDaily);
            },
            error: function (xhr, status, error) {
                var err = eval("(" + xhr.responseText + ")");
                console.log(err.Message);
            },
            async: false
        });
    }
    function filterItems(items, searchVal) {

        return items.filter((item) => Object.values(item).includes(searchVal));
    }

    //var btnExp = document.querySelector('#btnExport');

    //btnExp.onclick = (function () {
    //    $('.nav nav-pills').hide();
    //    $('#btnExportPnl').hide();
    //    var HTML_Width = 300;//$("#reportContent").width();
    //    var HTML_Height = 297;//$("#reportContent").height();
    //    var top_left_margin = 15;
    //    var PDF_Width = HTML_Width + (top_left_margin * 2);
    //    var PDF_Height = (PDF_Width * 1.5) + (top_left_margin * 2);
    //    var canvas_image_width = HTML_Width;
    //    var canvas_image_height = HTML_Height;

    //    var totalPDFPages = Math.ceil(HTML_Height / PDF_Height) - 1;

    //    html2canvas($("#reportContent")[0]).then(function (canvas) {
    //        var imgData = canvas.toDataURL("image/jpeg", 1.0);
    //        var pdf = new jsPDF('p', 'pt', [PDF_Width, PDF_Height]);
    //        pdf.addImage(imgData, 'JPG', top_left_margin, top_left_margin, canvas_image_width, canvas_image_height);
    //        for (var i = 1; i <= totalPDFPages; i++) {
    //            pdf.addPage(PDF_Width, PDF_Height);
    //            pdf.addImage(imgData, 'JPG', top_left_margin, -(PDF_Height * i) + (top_left_margin * 4), canvas_image_width, canvas_image_height);
    //        }
    //        pdf.save("GORecruiteIT_Performance_Report.pdf");

    //    });
    //    $('#btnExportPnl').show();
    //    $('.nav nav-pills').show();
    //})();

    function getCurrentDateTime() {
        var now = new Date();

        // Format the time
        var hours = now.getHours();
        var minutes = now.getMinutes();
        var seconds = now.getSeconds();
        var period = hours >= 12 ? "PM" : "AM";
        hours = hours % 12 || 12; // Convert to 12-hour format
        var time = hours + ":" + (minutes < 10 ? "0" + minutes : minutes) + ":" + (seconds < 10 ? "0" + seconds : seconds) + " " + period;

        // Format the date
        var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        var month = months[now.getMonth()];
        var day = now.getDate();
        var year = now.getFullYear();
        var date = day + " " + month + " " + year;

        // Get the current time zone
        var timeZone = "IST";

        // Display the formatted time, time zone, and date
        var datetimeElement = document.getElementById("datetime");
        datetimeElement.textContent = time + " " + timeZone + " | " + date;
    }

    // Call the function to display the current date and time
    getCurrentDateTime();

    // Update the date and time every second
    setInterval(getCurrentDateTime, 1000);

    ////Onload functions
    $(document).ready(function () {


        $('#btnExport').click(function () {

            $('#tabPnl').hide();
            $('#btnExport').hide();
            $('#btnExportIcon').hide();
            var HTML_Width = 500;//$("#reportContent").width();
            var HTML_Height = 297;//$("#reportContent").height();
            var top_left_margin = 15;
            var PDF_Width = HTML_Width + (top_left_margin * 2);
            var PDF_Height = (PDF_Width * 1.5) + (top_left_margin * 2);
            var canvas_image_width = HTML_Width;
            var canvas_image_height = HTML_Height;

            var totalPDFPages = Math.ceil(HTML_Height / PDF_Height) - 1;

            html2canvas($("#reportContent")[0]).then(function (canvas) {
                var imgData = canvas.toDataURL("image/jpeg", 1.0);
                var pdf = new jsPDF('p', 'pt', [PDF_Width, PDF_Height]);
                pdf.addImage(imgData, 'JPG', top_left_margin, top_left_margin, canvas_image_width, canvas_image_height);
                for (var i = 1; i <= totalPDFPages; i++) {
                    pdf.addPage(PDF_Width, PDF_Height);
                    pdf.addImage(imgData, 'JPG', top_left_margin, -(PDF_Height * i) + (top_left_margin * 4), canvas_image_width, canvas_image_height);
                }
                pdf.save("GORecruiteIT_Performance_Report.pdf");

            });
            $('#btnExport').show();
            $('#btnExportIcon').show();
            $('#tabPnl').show();

        });

    });


    fnGetRecruitmentStatusCountByRecruiter();
    fnGetActiveJobsCountByRecruiter();
    fnGetOverviewReportofRecruiter();
    fnGetPerformanceReportDetails();
    fnLoadChart();
    $("#div_Loader").hide();
    @*Radial Chart*@


        function fnLoadChart() {
            var options = {
                series: radialChartData.achievedCount,
                chart: {
                    height: 390,
                    type: 'radialBar',
                },
                plotOptions: {
                    radialBar: {
                        offsetY: 0,
                        startAngle: 0,
                        endAngle: 270,
                        hollow: {
                            margin: 5,
                            size: '30%',
                            background: 'transparent',
                            image: undefined,
                        },
                        dataLabels: {
                            name: {
                                show: false,
                            },
                            value: {
                                show: false,
                            }
                        }
                    }
                },
                colors: ['#1ab7ea', '#0084ff', '#39539E', '#0077B5'],
                labels: ['Closure', 'Monthy', 'Weekly', 'Daily'],
                legend: {
                    show: true,
                    floating: true,
                    fontSize: '16px',
                    position: 'left',
                    offsetX: 60, // Negative value to move to the left
                    offsetY: 0,
                    labels: {
                        useSeriesColors: true,
                    },
                    markers: {
                        size: 0
                    },
                    formatter: function (seriesName, opts) {
                        return seriesName + ":  " + opts.w.globals.series[opts.seriesIndex]
                    },
                    itemMargin: {
                        vertical: 3
                    }
                },
                responsive: [{
                    breakpoint: 480,
                    options: {
                        legend: {
                            show: false
                        }
                    }
                }]
            };

            var chart = new ApexCharts(document.querySelector("#chart"), options);
            chart.render();

            $("#div_Loader").hide();
        }

    $(document).ready(function () {
        //$(window).ready(() => {
        //    var myElement = document.querySelector("#btnExport");
        //    myElement.addEventListener("event", handler);
        //});

        document.querySelectorAll('#btnExport')
            .forEach(input => input.addEventListener('click', this.click));
    });


    //$(window).ready(() => {
    //    var myElement = document.querySelector("#btnExport");
    //    myElement.addEventListener("event", handler);
    //});

</script>

<script>
    $(document).ready(function () {
        // hide all chart divs except chart01
        $('.chart').hide();
        $('#chart01').show();

        // hide div with id="002"
        $('#002').hide();

        // handle tab clicks for chart tabs
        $('.nav-link').click(function (e) {
            e.preventDefault();

            // get the clicked tab's href value
            var selectedTab = $(this).attr('href');

            // hide all chart divs
            $('.chart').hide();

            // show the corresponding chart div based on the selected tab
            if (selectedTab === '#Year') {
                $('#chart01').show();
            } else if (selectedTab === '#Month') {
                $('#chart02').show();
            } else if (selectedTab === '#Week') {
                $('#chart03').show();
            }
        });

        // handle tab clicks for div tabs
        $('.div-nav-link').click(function (e) {
            e.preventDefault();

            // get the clicked tab's href value
            var selectedTab = $(this).attr('href');

            // hide all divs
            $('.div-content').hide();

            // show the corresponding div based on the selected tab
            if (selectedTab === '#Overview') {
                $('#001').show();
                $('#002').hide(); // hide div with id="002"
                $('#chart01').show(); // show chart01
            } else if (selectedTab === '#Today') {
                $('#001').hide(); // hide div with id="001"
                $('#002').show();
            }
        });

        // handle tab clicks for main tabs
        $('.nav-link').click(function (e) {
            e.preventDefault();

            // get the clicked tab's href value
            var selectedTab = $(this).attr('href');

            // show/hide divs based on the selected tab
            if (selectedTab === '#Overview') {
                $('#001').show();
                $('#002').hide(); // hide div with id="002"
                $('#chart01').show(); // show chart01
            } else if (selectedTab === '#Today') {
                $('#001').hide(); // hide div with id="001"
                $('#002').show();
            }
        });
    });
</script>


@*<script>
    // Sample data for each month
    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
    const data1 = [20, 90, 80, 10, 50, 30, 100, 40, 10, 10, 20, 20];
    const data2 = [15, 30, 40, 8, 40, 20, 52, 30, 9, 7, 20, 12];
    const data3 = [30, 60, 30, 30, 30, 30, 60, 30, 30, 30, 30, 30];

    // Get the canvas element
    const ctx = document.getElementById('mixed-chart').getContext('2d');

    // Create the mixed chart
    new Chart(ctx, {
        type: 'bar',
        data: {
            labels: months,
            datasets: [
                {
                    type: 'bar',
                    label: 'BP Submission',
                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                    data: data1
                },
                {
                    type: 'bar',
                    label: 'EC Submission',
                    backgroundColor: 'rgba(75, 192, 192, 0.5)',
                    data: data2
                },
                {
                    type: 'line',
                    label: 'Closure',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1,
                    fill: false,
                    data: data3
                }
            ]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                x: {
                    grid: {
                        display: false
                    },
                    ticks: {
                        display: true,
                        color: '#b2b9bf',
                        font: {
                            size: 11,
                            family: 'Open Sans',
                            style: 'normal',
                            lineHeight: 2
                        }
                    }
                },
                y: {
                    grid: {
                        display: true,
                        borderDash: [5, 5]
                    },
                    ticks: {
                        display: true,
                        padding: 10,
                        color: '#b2b9bf',
                        font: {
                            size: 11,
                            family: 'Open Sans',
                            style: 'normal',
                            lineHeight: 2
                        }
                    }
                }
            },
            plugins: {
                legend: {
                    display: true,
                    position: 'bottom', // Align the legend to the top
                    align: 'start', // Align the legend to the left
                }
            }
        }
    });
</script>*@

@*<script>
    // Sample data for each week
    const weeks = ['29 - 2 Week', '5 - 9 Week', '12 - 16 Week', '19 - 23 Week', '26 - 30 Week'];
    const data4 = [20, 50, 50, 10, 30];
    const data5 = [15, 30, 40, 8, 40];
    const data6 = [0, 0, 0, 0, 25];

    // Get the canvas element
    const ctx2 = document.getElementById('mixed-chart1').getContext('2d');

    // Create the mixed chart
    new Chart(ctx2, {
        type: 'bar',
        data: {
            labels: weeks,
            datasets: [
                {
                    type: 'bar',
                    label: 'BP Submission',
                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                    data: data4
                },
                {
                    type: 'bar',
                    label: 'EC Submission',
                    backgroundColor: 'rgba(75, 192, 192, 0.5)',
                    data: data5
                },
                {
                    type: 'line',
                    label: 'Closure',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1,
                    fill: false,
                    data: data6
                }
            ]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                x: {
                    grid: {
                        display: false
                    },
                    ticks: {
                        display: true,
                        color: '#b2b9bf',
                        font: {
                            size: 11,
                            family: 'Open Sans',
                            style: 'normal',
                            lineHeight: 2
                        }
                    }
                },
                y: {
                    grid: {
                        display: true,
                        borderDash: [5, 5]
                    },
                    ticks: {
                        display: true,
                        padding: 10,
                        color: '#b2b9bf',
                        font: {
                            size: 11,
                            family: 'Open Sans',
                            style: 'normal',
                            lineHeight: 2
                        }
                    }
                }
            },
            plugins: {
                legend: {
                    display: true,
                    position: 'bottom', // Align the legend to the top
                    align: 'start', // Align the legend to the left
                }
            }
        }
    });
</script>*@

@*<script>
    $(document).ready(function () {
        // Sample data for each week
        const weeks = ['20 Jun', '21 Jun', '22 Jun', '23 Jun', '26 Jun'];
        const data4 = [10, 6, 6, 8, 2];
        const data5 = [6, 3, 4, 7, 0];
        const data6 = [0, 0, 05, 0, 0];

        // Get the canvas element
        const ctx2 = document.getElementById('mixed-chart2').getContext('2d');

        // Create the mixed chart
        new Chart(ctx2, {
            type: 'bar',
            data: {
                labels: weeks,
                datasets: [{
                    type: 'bar',
                    label: 'BP Submission',
                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                    data: data4
                },
                {
                    type: 'bar',
                    label: 'EC Submission',
                    backgroundColor: 'rgba(75, 192, 192, 0.5)',
                    data: data5
                },
                {
                    type: 'line',
                    label: 'Closure',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1,
                    fill: false,
                    data: data6
                }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    x: {
                        grid: {
                            display: false
                        },
                        ticks: {
                            display: true,
                            color: '#b2b9bf',
                            font: {
                                size: 11,
                                family: 'Open Sans',
                                style: 'normal',
                                lineHeight: 2
                            }
                        }
                    },
                    y: {
                        grid: {
                            display: true,
                            borderDash: [5, 5]
                        },
                        ticks: {
                            display: true,
                            padding: 10,
                            color: '#b2b9bf',
                            font: {
                                size: 11,
                                family: 'Open Sans',
                                style: 'normal',
                                lineHeight: 2
                            }
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: true,
                        position: 'bottom', // Align the legend to the top
                        align: 'start', // Align the legend to the left
                    }
                }
            }
        });
    });
</script>
*@